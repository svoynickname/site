<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Mainroad</title>
    <link>/site/categories/development/</link>
    <description>Recent content in Development on Mainroad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Wed, 02 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/site/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo &#43; Firebase</title>
      <link>/site/post/hugo-firebase/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/site/post/hugo-firebase/</guid>
      <description>Эта статья поможет вам быстро и бесплатно создать веб-сайт для размещения портфолио, резюме или блога.
Учётная запись Google Для размещения сайта нам потребуется учетная запись Google. Если у вас есть почта на Gmail, значит она у вас есть. Если нет, создайте учётную запись.
Домен Это необязательно. В мире существуют разные провайдеры доменных имен, найти можно тут Google.
Генератор статических сайтов Hugo Hugo - это инструмент на основе языка Go , который генерирует статические веб-сайты.</description>
    </item>
    
    <item>
      <title>Basic HTML Elements</title>
      <link>/site/post/basic-elements/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/site/post/basic-elements/</guid>
      <description>&lt;p&gt;The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Basic HTML Elements</title>
      <link>/site/post/new-post1/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/site/post/new-post1/</guid>
      <description>jksdjf sdkjf sakdfjlk asdkfjkl asdjflj</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/site/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/site/post/goisforlovers/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/site/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/site/post/hugoisforlovers/</guid>
      <description>## [Go by Example](./): Range    _range_ iterates over elements in a variety of data structures. Let’s see how to use `range` with some of the data structures we’ve already learned.      [![](play.png &#34;Run code&#34;)](http://play.golang.org/p/SkL_AS-1Jd) package main   



import &#34;fmt&#34;   



func main() {   


Here we use range to sum the numbers in a slice.</description>
    </item>
    
  </channel>
</rss>